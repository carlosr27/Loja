# Generated by Django 2.1.1 on 2018-11-14 04:05

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        ('image', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=26, unique=True, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('multiple', models.BooleanField(default=False, verbose_name='Multiple Choices')),
                ('select', models.BooleanField(default=True, help_text='Se o campo multipla escolha for False entao esse campo sera ignorado', verbose_name='Values as select?')),
            ],
            options={
                'verbose_name': 'Option',
                'verbose_name_plural': 'Options',
            },
        ),
        migrations.CreateModel(
            name='OptionValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('text_value', models.CharField(help_text='Preencha se essa campo nao for um numero', max_length=20, verbose_name='Textual Value')),
                ('number_value', models.FloatField(blank=True, help_text='Se o valor textual foi preenchido esse campo sera ignorado', null=True, verbose_name='Number Value')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Option', verbose_name='Option')),
            ],
            options={
                'verbose_name': 'Option Value',
                'verbose_name_plural': 'Options Values',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Description')),
                ('stock', models.IntegerField(default=0, help_text='0 = infinito', verbose_name='Stock')),
                ('price', models.FloatField(verbose_name='Price')),
                ('old_price', models.FloatField(blank=True, null=True, verbose_name='Old Price')),
                ('promotion', models.FloatField(blank=True, help_text='Substitui o preço', null=True, verbose_name='Promotion')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('show_home', models.BooleanField(default=True, verbose_name='Show In Home')),
                ('show_promotion', models.BooleanField(default=False, help_text='Mostrar o preço da promoção sobre o preço normal?', verbose_name='Show Promotion')),
                ('show_old_price', models.BooleanField(default=False, verbose_name='Show Old Price')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.Category', verbose_name='Category')),
                ('collection', models.ManyToManyField(blank=True, null=True, to='department.Collection', verbose_name='Collection')),
                ('options', models.ManyToManyField(to='product.Option', verbose_name='Options')),
                ('sub_category', models.ManyToManyField(to='department.SubCategory', verbose_name='Sub Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=1, verbose_name='Position')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.Color', verbose_name='Color')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image.Image', verbose_name='Imagem')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Image',
            },
        ),
        migrations.AlterUniqueTogether(
            name='productimage',
            unique_together={('product', 'position')},
        ),
    ]
